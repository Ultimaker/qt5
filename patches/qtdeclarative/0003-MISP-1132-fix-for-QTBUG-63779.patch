From dbcd1c847f66e9788d2899d8ca757ee51cf19180 Mon Sep 17 00:00:00 2001
From: Robin den Hertog <r.denhertog@ultimaker.com>
Date: Wed, 28 Oct 2020 17:09:44 +0100
Subject: [PATCH 3/3] MISP-1132: fix for QTBUG-63779

source: https://codereview.qt-project.org/changes/qt%2Fqtdeclarative~275105/revisions/3/patch?zip&path=src%2Fquick%2Fitems%2Fqquickevents.cpp

Signed-off-by: Robin den Hertog <r.denhertog@ultimaker.com>
---
 src/quick/items/qquickevents.cpp | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/quick/items/qquickevents.cpp b/src/quick/items/qquickevents.cpp
index c43eab6b8..6c2d4a36e 100644
--- a/src/quick/items/qquickevents.cpp
+++ b/src/quick/items/qquickevents.cpp
@@ -1373,10 +1373,18 @@ QQuickPointerEvent *QQuickPointerTouchEvent::reset(QEvent *event)
         point->reset(tps.at(i), ev->timestamp());
         const auto &preserved = preserves.at(i);
         if (point->state() == QQuickEventPoint::Pressed) {
-            if (preserved.grabber)
+            if (preserved.grabber) {
                 qWarning() << "TouchPointPressed without previous release event" << point;
-            point->setGrabberItem(nullptr);
-            point->clearPassiveGrabbers();
+                if (QQuickItem *grabber = point->grabberItem()) {
+                    QQuickWindowPrivate *windowPriv = QQuickWindowPrivate::get(grabber->window());
+                    if (windowPriv->isDeliveringTouchAsMouse()) {
+                        windowPriv->cancelTouchMouseSynthesis();
+                        QQuickPointerEvent *ev = windowPriv->queryPointerEventInstance(windowPriv->touchMouseDevice);
+                        if (ev)
+                            ev->point(0)->cancelExclusiveGrab();
+                    }
+                }
+            }
         } else {
             // Restore the grabbers without notifying (don't call onGrabChanged)
             Q_ASSERT(preserved.pointId == 0 || preserved.pointId == point->pointId());
-- 
2.17.1

