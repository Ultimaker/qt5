From 00631ecf4f89cae0bd645098191a540da51bd674 Mon Sep 17 00:00:00 2001
From: Joost Jager <joost.jager@gmail.com>
Date: Wed, 28 Mar 2018 14:14:14 +0200
Subject: [PATCH 3/3] Delay setMode and drawNow commits from joost in the
 5.9.4-ultimaker branch

Signed-off-by: Robin den Hertog <r.denhertog@ultimaker.com>
---
 .../fbconvenience/qfbscreen.cpp               |  7 +++-
 .../fbconvenience/qfbscreen_p.h               |  2 ++
 .../fbconvenience/qfbwindow.cpp               |  2 ++
 .../platforms/linuxfb/qlinuxfbdrmscreen.cpp   | 32 +++++++++++++++++--
 4 files changed, 40 insertions(+), 3 deletions(-)

diff --git a/src/platformsupport/fbconvenience/qfbscreen.cpp b/src/platformsupport/fbconvenience/qfbscreen.cpp
index c42fd879f8..d3b0688a33 100644
--- a/src/platformsupport/fbconvenience/qfbscreen.cpp
+++ b/src/platformsupport/fbconvenience/qfbscreen.cpp
@@ -171,7 +171,7 @@ void QFbScreen::scheduleUpdate()
 {
     if (!mUpdatePending) {
         mUpdatePending = true;
-        QCoreApplication::postEvent(this, new QEvent(QEvent::UpdateRequest));
+        //QCoreApplication::postEvent(this, new QEvent(QEvent::UpdateRequest));
     }
 }
 
@@ -195,6 +195,11 @@ bool QFbScreen::initialize()
     return true;
 }
 
+void QFbScreen::redrawNow() {
+    doRedraw();
+    mUpdatePending = false;
+}
+
 QRegion QFbScreen::doRedraw()
 {
     const QPoint screenOffset = mGeometry.topLeft();
diff --git a/src/platformsupport/fbconvenience/qfbscreen_p.h b/src/platformsupport/fbconvenience/qfbscreen_p.h
index eed615de36..de2ded8934 100644
--- a/src/platformsupport/fbconvenience/qfbscreen_p.h
+++ b/src/platformsupport/fbconvenience/qfbscreen_p.h
@@ -100,6 +100,8 @@ public:
 
     void scheduleUpdate();
 
+    void redrawNow(); 
+
 public slots:
     virtual void setDirty(const QRect &rect);
     void setPhysicalSize(const QSize &size);
diff --git a/src/platformsupport/fbconvenience/qfbwindow.cpp b/src/platformsupport/fbconvenience/qfbwindow.cpp
index 36f92b8cea..6c0c43a3b9 100644
--- a/src/platformsupport/fbconvenience/qfbwindow.cpp
+++ b/src/platformsupport/fbconvenience/qfbwindow.cpp
@@ -145,6 +145,8 @@ void QFbWindow::repaint(const QRegion &region)
     if (oldGeometryLocal != currentGeometry)
         platformScreen()->setDirty(oldGeometryLocal);
     platformScreen()->setDirty(dirtyRegion);
+
+    platformScreen()->redrawNow(); 
 }
 
 QT_END_NAMESPACE
diff --git a/src/plugins/platforms/linuxfb/qlinuxfbdrmscreen.cpp b/src/plugins/platforms/linuxfb/qlinuxfbdrmscreen.cpp
index a87dee3003..0a1fbf3b37 100644
--- a/src/plugins/platforms/linuxfb/qlinuxfbdrmscreen.cpp
+++ b/src/plugins/platforms/linuxfb/qlinuxfbdrmscreen.cpp
@@ -116,11 +116,13 @@ private:
                                 unsigned int tv_sec, unsigned int tv_usec, void *user_data);
 
     QVector<Output> m_outputs;
+    bool m_deviceInitialized; 
 };
 
 QLinuxFbDevice::QLinuxFbDevice(QKmsScreenConfig *screenConfig)
     : QKmsDevice(screenConfig, QStringLiteral("/dev/dri/card0"))
 {
+    m_deviceInitialized = false;
 }
 
 bool QLinuxFbDevice::open()
@@ -332,6 +334,8 @@ void QLinuxFbDevice::destroyFramebuffers()
 
 void QLinuxFbDevice::setMode()
 {
+    m_deviceInitialized = true;
+    
     for (Output &output : m_outputs) {
         drmModeModeInfo &modeInfo(output.kmsOutput.modes[output.kmsOutput.mode]);
         if (drmModeSetCrtc(fd(), output.kmsOutput.crtc_id, output.fb[0].fb, 0, 0,
@@ -377,6 +381,29 @@ void QLinuxFbDevice::swapBuffers(Output *output)
         // and calls back pageFlipHandler once the flip completes.
         drmHandleEvent(fd(), &drmEvent);
     }
+
+
+    usleep(1000);
+
+    // schedule page flip
+    // qDebug("Start schedule page flip");
+
+    if (!m_deviceInitialized)
+    {
+        setMode();
+    } else {
+        Framebuffer &fb(output->fb[output->backFb]);
+        if (drmModePageFlip(fd(), output->kmsOutput.crtc_id, fb.fb, DRM_MODE_PAGE_FLIP_EVENT, output) == -1) {
+            qErrnoWarning(errno, "Page flip failed");
+            return;
+        }
+        output->flipped = false;
+    }
+
+
+    // immediately advance back buffer, because there are three buffers
+    // output->backFb = (output->backFb + 1) % BUFFER_COUNT;
+
 }
 
 QLinuxFbDrmScreen::QLinuxFbDrmScreen(const QStringList &args)
@@ -407,8 +434,9 @@ bool QLinuxFbDrmScreen::initialize()
     m_device->createScreens();
     // Now off to dumb buffer specifics.
     m_device->createFramebuffers();
-    // Do the modesetting.
-    m_device->setMode();
+    
+    // Mode setting disabled, because it will leave the screen black until the first frame is ready
+    // m_device->setMode();
 
     QLinuxFbDevice::Output *output(m_device->output(0));
 
-- 
2.17.1

